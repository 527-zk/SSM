<?xml version="1.0" encoding="UTF-8"?>
<beans xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns="http://www.springframework.org/schema/beans">

    <!--开启jsr250注解-->
    <security:global-method-security jsr250-annotations="enabled"
                                     secured-annotations="enabled"
                                     pre-post-annotations="enabled" />
    <!-- 配置不拦截的资源 -->
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/plugins/**"/>
    <security:http security="none" pattern="/login.jsp"/>
    <security:http security="none" pattern="/failed.jsp"/>
    <security:http security="none" pattern="/forgetPassword.jsp"/>
    <security:http security="none" pattern="/forget/getCaptcha.do"/>
    <security:http security="none" pattern="/forget/modifyPassword.do"/>

    <!--配置具体的规则 auto-config="true" 不用自己编写登录的页面，
    框架提供默认登录页面 use-expressions="false" 是否使用SPEL表达式 -->
    <security:http auto-config="true" use-expressions="false">
        <!--配置具体的拦截规则，pattern="请求路径规则" access=“访问系统的角色”-->
        <security:intercept-url pattern="/**" access="ROLE_ADMIN,ROLE_MANAGER,ROLE_GROUP,ROLE_USER"/>

        <!--定义跳转的具体页面-->
        <security:form-login
            login-page="/login.jsp"
            login-processing-url="/login.do"
            default-target-url="/index.jsp"
            authentication-failure-url="/failed.jsp"/>
        <!--关闭跨域请求-->
        <security:csrf disabled="true"/>
        <!--退出-->
        <security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.jsp"/>

    </security:http>

    <!--切换成数据库的用户名和密码-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">
            <!-- 配置加密的方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <!-- 配置加密类-->
    <bean  id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

</beans>